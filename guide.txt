!! This guide only covers installing arch in EFI/UEFI mode !!
If you want to install arch in compatibility BIOS mode, refer to the official guide (https://wiki.archlinux.org/title/Installation_guide#Example_layouts) along with this one

Lines prefixed with '-' are instructions on what to do
Lines prefixed with '#' are commands that need to be run in the console
Lines prefixed with '%' are examples for commands that may be too ambiguous for some users
Lines prefixed with '!' are important notices, which should be read carefuly
Words in curly brackets like {THIS} should be replaced with the apropriate command or word depending on the context
Lists prefixed with '*' represent multiple choices, with '*' lines under them being those choices
Words in apostrophes 'word_1 + word_2 + ... + word_n' usually refer to keyboard commands/shortcuts
Words in straight brackets refer to parts of the installation process like [Part n]


!! For a minimal install follow instructions up to and including [Part 6] !!


!! You should probably look up a tutorial on vim if you don't know how to use it !!


Part 0: Set up install media
    - Download the iso from the official (https://archlinux.org/download) website
    - Flash it to a usb drive and boot from it (search the internet for "flash image to usb drive and boot from it")
    - After booting into the arch installer you can start the installation process in [Part 1]


Part 1: Connect to the internet (if you have a wired conenction, skip to the last step in [Part 1])
    - Run the arch network manager
    # iwctl
    # station list
    - A list of 'stations' (wifi modules in the PC) will be printed
    # station {STATION_NAME} get-networks
    - A list of networks will be printed
    # station {STATION_NAME} connect {NETWORK_NAME}
    - Input your password
    *- Exit from iwctl
      *# 'ctrl + d'
      *# exit
    # timedatectl set-ntp true


Part 2: Partitioning the disks 
    # lsblk
    - A list of disks and their partitions will be printed
    - Carefuly choose the correct disk you want to format
    # cfdisk /dev/{DISK_NAME}
    - You will need to make a 512M partition and set its type to "EFI system partition"
    *- Choose wether you want or need swap
      *- If you have less than 8G of RAM, it is reccomended to also create a swap partition of at leas 4G, and set it's type to "Linux Swap"
      *- If you want to be able to use the Hibernate feature, create a swap partition of at least {RAM_SIZE + 1.1G}
    - Use the remainder of the disk to create a new partition, and leave it's type to the default Linux Filesystem
    - Write the changes to disk
    - Quit from cfdisk
    # lsblk
    - You should see the new partitions that you created
    # mkfs.fat -F32 /dev/{EFI_PARTITION_NAME}
    *- If you created a swap partition run the following two commands
      # mkswap /dev/{SWAP_PARTITION_NAME}
      # swapon /dev/{SWAP_PARTITION_NAME}
    * Chose a filesystem
      *- For modern systems, BTRFS is reccomended
        # mkfs.btrfs /dev/{LINUX_SYSTEM_PARTITION_NAME}
      *- For older systems, use EXT4
        # mkfs.ext4 /dev/{LINUX_SYSTEM_PARTITION_NAME}


Part 3: Mounting the disks and preparing the base arch install
    # mount /dev/{LINUX_SYSTEM_PARTITION_NAME} /mnt
    # mount --mkdir /dev/{EFI_PARTITION_NAME} /mnt/boot/efi
    # pacstrap /mnt base base-devel linux linux-firmware vim git grub efibootmgr networkmanager
    # genfstab -U /mnt >> /mnt/etc/fstab
    # arch-chroot /mnt


Part 4: Setting up the bootloader and other components of the system
    - Chose your time zone
    # ls /usr/share/zoneinfo/
    - This will print out a list of regions
    # ls /usr/share/zoneinfo/{REGION}
    - This will print out a list of cities in that region
    # ln -sf /usr/share/zoneinfo/{REGION}/{CITY} /etc/localtime
      %# ln -sf /usr/share/zoneinfo/Europe/Bucharest /etc/localtime
      %# ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
    # hwclock --systohc
    # vim /etc/locale.gen
    - Uncomment the locale of your choice
      %- Uncomment "en_US.UTF-8 UTF-8" if you're not sure
    # Quit, writing changes
    # locale-gen
    # echo "LANG={LOCALE}" >> /etc/locale.conf
      %# echo "LANG=en_US.UTF-8" >> /etc/locale.conf
      %- If you chose another locale, use that, without the last part sepparated by a space in the locale.gen
    # echo "{HOSTNAME}" >> /etc/hostname
      %# echo "john-laptop" >> /etc/hostname
      %# echo "localhost" >> /etc/hostname
    # mkinitcpio -P
    *- Install microcode for your processor
      *# pacman -S amd-ucode
      *# pacman -S intel-ucode
    *- Install the grub bootloader
      *- Sometimes, manufacturers implement EFI in a way that forgets bootable drives when removing the YSB, and you'll have to make the install removable
        # grub-install --target=x86_64-efi --efi-directory=esp --removable
      *- but for most EFI/UEFI systems you can use the default GRUB installation
        # grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=GRUB
    # grub-mkconfig -o /boot/grub/grub.cfg
    # systemctl enable NetworkManager


Part 5: Setting up users and passwords
    # passwd
    - In the next prompt, set your ROOT password
    - Install requirements for sudo users
    # pacman -S vi sudo
    # useradd --create-home {USER}
      %# useradd --create-home john
    # passwd {USER}
    - Set you main user password (usually this is the same as the root password)
    # usermod -aG wheel {USER}
    # visudo
    - Uncomment the first line where "%wheel ALL=(ALL) ALL" appears


Part 6: Finishing the install
    *- Exit from chroot
      *# 'ctrl + d'
      *# exit
    # umount -R /mnt
    # shutdown now
    - Remove the installation media (USB, CD/DVD etc)
    - After reboot, login with your user and password (don't use root)
    -It's time to install yay and aur packages
    # git clone https://aur.archlinux.org/yay.git
    # cd yay
    # makepkg -si
    - Verify that yay has installed correctly
      # yay --version
    # cd ..
    - Delete the yay folder
    # rm -rf yay
    - Add multilib mirrorlist for 32bit apps (wine, steam etc)
    # vim /etc/pacman.conf
    - Uncomment the following lines (close to the bottom of the file)
      "[multilib-testing]"
      "Include = /etc/pacman.d/mirrorlist"
      "[multilib]"
      "Include = /etc/pacman.d/mirrorlist"
    - Quit, writing changes
    - The most important part of your arch install, the part that helps you brag to your friends
    # sudo pacman -S neofetch
    # sudo vim /etc/bash.bashrc
    * - If that file is empty quit from it without writing
      # sudo vim /etc/bashrc
    - Add a new line at the begining and write neofetch
    - Quit, writing changes
    - Run neofetch
    # neofetch


part 7: Choosing and installing a desktop environment or window manager (collectively refered to as {VISUAL_ENV} from now on)
    ! Unlike desktop environments, window managers require additional setup after installation
    ! This guide will not cover that setup, just the install process
    - First update your system
    # sudo pacman -Syyu
    - Next install and enable the desktop manager, xserver and audio driver
    # sudo pacman -S sddm xorg alsa pulseaudio pulseaudio-alsa pulseaudio-bluetooth pulseaudio-equalizer pulseaudio-jack
    # systemctl enable sddm
    ! Do not reboot or shutdown your system before finishing this part
    ! You might lock yourself into sddm, without the possibility of opening the console
    *- If you have an nvidia GPU, you need to install additional drivers
      # pacman -S nvidia nvidia-utils
      # yay -S optimus-manager
      # yay -S optimus-manager-qt
    - Now choose a {VISUAL_ENV} to install
    - Skip to [Part 7.X] that shows how to install {VISUAL_ENV}, then return here
    - You can install multiple desktop environments and window managers by going to another [Part 7.X]
    - If {VISUAL_ENV} is not in this guide, search the internet for any requirements it might have
    *- Best additional guides for other desktop environments:
      *- https://www.youtube.com/c/DistroTube
      *- https://www.youtube.com/c/MentalOutlaw
      *- https://www.youtube.com/c/ErikDubois
    - It's here that you usually install a web browser
    *- Different browsers require different steps, here are some examples
      *- Firefox
        # sudo pacman -S firefox
      *- Brave Browser
        # yay -S brave-bin
      *- Chromium (open source version of Google Chrome)
        # sudo pacman -S chromium
    - If your prefered browser is not in the list, look it up online
    - Restart your system
    - After the restart, in the top-left you will see a selection with all installed {VISUAL_ENV}


part 7.1: KDE Plasma (reccomended for ex-windows users)
    # sudo pacman -S plasma-desktop plasma-pa konsole dolphin kwallet kwalletmanager kwallet-pam signon-kwallet-extension
    ! When running a web browser in kde, you might be prompted to create a wallet
    ! If that happens, close the popup and your browser, make sure you properly installed all kwallet components listed below, and try to open your browser again
      - kwallet
      - kwalletmanager
      - kwallet-pam
      - signon-kwallet-extension


part 7.2: xfce
    # sudo pacman -S xfce4 xfce-goodies
    - You will be prompted with a few choices
    - Press 'enter/return' on all of them


part 7.3: lxqt
    # sudo pacman -S lxqt breeze-icons termite


Part 7.4: i3wm
    # sudo pacman -S i3
    ! When asked what to install, write "1 3 4 5"
    # sudo pacman -S dmenu
    # yay -S termite


Part 7.5: awesome
    #sudo pacman -S awesome lua
    # yay -S termite
